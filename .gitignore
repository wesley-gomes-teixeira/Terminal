import os
# Usei a biblioteca  OS, onde ela é uma biblioteca de comandos do sistema operacional que auxilia a fazer algumas operações dentro do computador.
def display_tree(directory, indent=""):
    files = os.listdir(directory)
    for file in files:
        file_path = os.path.join(directory, file)
        if os.path.isdir(file_path):
            print(f"{indent}├── {file}")
            display_tree(file_path, indent + "│   ")
        else:
            print(f"{indent}├── {file}")

def run_terminal():
    current_dir = os.getcwd()
    #Aqui temos a entrada da variavel
    while True:
        command = input(f"{current_dir} $ ")
        command_parts = command.split(" ")
        if command_parts[0] == "Sair":
            break
        # Usei o try para executar código e caso não consiga executar por conta de um erro, ele vai retornar o que temos dentro do except.
        # Dessa maneira ele mostra uma mensagem de erro ou que não foi encontrado.
        elif command_parts[0] == "cd":
            if len(command_parts) < 2:
                print("Diretório não especificado.")
                continue
            directory = command_parts[1]
            if not os.path.isdir(directory):
                print("Diretório não encontrado.")
                continue
            os.chdir(directory)
            current_dir = os.getcwd()
        elif command_parts[0] == "ls":
            files = os.listdir(current_dir)
            for file in files:
                print(file)
        elif command_parts[0] == "mkdir":
            if len(command_parts) < 2:
                print("Nome do diretório não especificado.")
                continue
            directory = command_parts[1]
            try:
                os.mkdir(directory)
                print("Diretório criado.")
            except FileExistsError:
                print("Diretório já existe.")
        elif command_parts[0] == "rm":
            if len(command_parts) < 2:
                print("Nome do arquivo não especificado.")
                continue
            file = command_parts[1]
            if os.path.isdir(file):
                print("Não é possível remover um diretório. Use 'rm -r' para remover um diretório.")
                continue
            try:
                os.remove(file)
                print("Arquivo removido.")
            except FileNotFoundError:
                print("Arquivo não encontrado.")
        elif command_parts[0] == "touch":
            if len(command_parts) < 2:
                print("Nome do arquivo não especificado.")
                continue
            file = command_parts[1]
            if os.path.isdir(file):
                print("Não é possível criar um arquivo com o mesmo nome de um diretório existente.")
                continue
            try:
                with open(file, "w"):
                    pass
                print("Arquivo criado.")
            except FileExistsError:
                print("O arquivo já existe.")
        elif command_parts[0] == "tree":
            display_tree(current_dir)
        else:
            print("Comando inválido.")

run_terminal()
